# you can also use ini format for this file

[PATHS]

# cachloc is where the generated files wil go
# the file location in the gutenberg database will look like "cache/epub/50000/pg50000-images.mobi'
CACHEDIR = /public/vhost/g/gutenberg/html/cache/epub
CACHELOC = cache/epub

# source files are in directories like "/public/vhost/g/gutenberg/html/files/51234"
FILESDIR = file:///public/vhost/g/gutenberg/html/

# if you don't set a log location, output will go to the console
LOGFILE = /var/log/ebookconverter/ebookconverter.log

PGURL = http://www.gutenberg.org
BIBREC = http://www.gutenberg.org/ebooks  # prefix for opf file identifier metadata

EBOOKMAKER = ebookmaker  # how to call ebookmaker

# Database connection params
PGHOST = 127.0.0.1  # to connect to a local postgres
PGDATABASE = gutenberg
PGPORT = 5432
PGUSER = gutenberg

# optional parameters (passed to ebookmaker)

# PGVPNCMD = None   # command to start a vpn before getting source files
# EPUB_VALIDATOR: None #  validator to check epub output from ebookmaker
# EPUB_PREFLIGHT: None #  another validator to check epub output from ebookmaker
# PROXIES: None  # passed to requests to get source files

# MOBIGEN = kindlegen # command to invoke mobi conversion
# XELATEX = xelatex  # TeX converter
# GROFF = groff
# RHYMING_DICT = None # can be used for paragraph metrics, which seems dead
# TIMESTAMP = datetime.datetime.today ().isoformat ()[:19] # in case you need to fake a timestamp